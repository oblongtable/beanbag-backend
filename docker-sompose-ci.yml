version: "3.9"

services:
  # Test Database Service
  beanbag-test-db:
    image: postgres:16
    restart: always
    environment:
      # Use environment variables that will be provided by the GitHub Actions step
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Optional: Expose port if you needed to connect from outside docker for debugging CI
    # ports:
    #   - '5433:5432'
    # Optional: Use tmpfs for faster test DB startup/cleanup if data persistence isn't needed between test runs
    tmpfs:
      - /var/lib/postgresql/data

  # Test Runner Service (Your Application)
  beanbag-backend:
    # IMPORTANT: Use the image built and pushed in the previous job
    image: ghcr.io/${GITHUB_REPOSITORY}/beanbag-backend:${IMAGE_TAG}
    depends_on:
      - beanbag-test-db # Ensure DB starts before the app tries to connect/test
    # Override the command to run tests (same as docker-compose-test.yml)
    command:
      - "go"
      - "test"
      - "-v"
      - "./..."
    environment:
      # Pass through all necessary environment variables from the GitHub Actions step
      POSTGRES_HOST: beanbag-test-db # Service name acts as hostname within docker network
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT} # Usually 5432

      PORT: ${PORT}
      CLIENT_ORIGIN: ${CLIENT_ORIGIN}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_CALLBACK_URL: ${AUTH0_CALLBACK_URL}
